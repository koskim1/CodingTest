#include <bits/stdc++.h>
using namespace std;

int main(void) {
    ios::sync_with_stdio(0);
    cin.tie(0);

    /*
    
예를 들어 int형 10000의 최대범위를 가지는 문제가 있다면 이런식으로 4나 3정도의 
여유공간을 주는게 좋습니다.

int a[10004];

이를 통해 오버플로에 대한 신경을 덜 쓰게 만듭니다.

---------------------------------------------------------------------

예를 들어 문제의 범위는 0~9 정도의 수가 나오기 떄문에 board[10][10]으로 선언을 한 상황일 때
다음과 같은 코드를 작성하게 될 때가 있습니다. 이 때 이 코드는 문제가 없을까요?


if(visited[i][j]) {
	cur_money += board[i][j];
	cur_money += board[i-1][j];
	cur_money += board[i+1][j];

예를 들어 문제가 i가 9가 된 순간에 board[10][9] 이런식으로 참조하게 됩니다. 
이 경우 오버 플로가 발생하게 되는 것이죠. 제가 정의한 배열의 최대범위를 초과하게 되는 것입니다.

문제를 풀다보면 필요한 로직을 작성하는게 우선시 되다 보니 이런 범위초과에 대한 생각을
잘 못하게 됩니다. 그냥 넉넉히 추가합시다!!
    */

}